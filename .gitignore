# Compiled class file
## 확장자가 class 인 파일
*.class
## 위에서 확장자가 class 인 파일은 무시했지만 notMe.class 라는 파일은 무시하지 않음
!notMe.class

## System Files 시스템 오브젝트 또는 아카이브 파일들
.gradle
.settings
.classpath
.project

## macOS 에서 디렉토리에 접근 시 자동생성하는 파일
.DS_Store

# target, bin, build 폴더 하위의 모든 내용을 추적하지 않음
target/
bin/
build/

# 현재 디렉토리의 something 이라는 폴더는 무시하되 subdir/something 의 경우처럼 하위의 디렉토리인 경우는 무시하지 않음
/something


# IDE / Editor
.idea/
*.iml

# Dependency directories
node_modules/
jspm_packages/

# Log file and directories
*.log
/logs/
/log/

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

/.settings
/.vscode
.factorypath
.metadata
package-lock.json

# Created by .ignore support plugin (hsz.mobi)
### Node template
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache

# nuxt.js build output
.nuxt

# Nuxt generate
dist

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# Service worker
sw.*

# Vim swap files
*.swp

*.editorconfig
